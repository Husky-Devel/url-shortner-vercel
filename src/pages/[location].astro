---
import { createClient } from "@supabase/supabase-js";

// Initialize Supabase client with environment variables
const supabaseUrl = import.meta.env.SUPABASE_URL;
const supabaseKey = import.meta.env.SUPABASE_KEY;
const supabase = createClient(supabaseUrl, supabaseKey);

const discordWebhookUrl = import.meta.env.DISCORD_WEBHOOK_URL;
const { location } = Astro.params as { location?: string };

async function fetchRedirectUrl(location: string) {
  const { data, error } = await supabase
    .from("shortened_urls")
    .select("redirect_url")
    .eq("short_path", location)
    .single();

  if (error || !data) {
    console.error("Error fetching URL from Supabase:", error);
    return "/"; // Fallback URL in case of error or missing path
  }

  return data.redirect_url;
}

// Function to get the client's real IP address
function getClientIp(request: Request) {
  const forwardedFor = request.headers.get("x-forwarded-for");
  if (forwardedFor) {
    return forwardedFor.split(",")[0];
  }
  const cloudflareIp = request.headers.get("cf-connecting-ip");
  if (cloudflareIp) {
    return cloudflareIp;
  }
  const realIp = request.headers.get("x-real-ip");
  if (realIp) {
    return realIp;
  }
  return request.headers.get("host") || "Unknown";
}

const ip = getClientIp(Astro.request);
const userAgent = Astro.request.headers.get("user-agent") || "Unknown";

const discordPayload = {
  content: `
    ðŸš¨ New visitor detected!
    **IP Address**: ${ip}
    **User-Agent**: ${userAgent}
    **Redirect**: ${location}
    \n
  `,
};

// Send data to Discord webhook
await fetch(discordWebhookUrl, {
  method: "POST",
  headers: {
    "Content-Type": "application/json",
  },
  body: JSON.stringify(discordPayload),
});

// Fetch the redirect URL from Supabase
const redirectUrl = location === "go" ? "/" : await fetchRedirectUrl(location);

// Perform the redirection
return new Response(null, {
  status: 302,
  headers: {
    Location: redirectUrl,
  },
});
---

<!doctype html>
<html>
  <head>
    <title>Redirecting...</title>
  </head>
  <body>
    <p>Redirecting to <a href={redirectUrl}>{redirectUrl}</a>...</p>
  </body>
</html>
